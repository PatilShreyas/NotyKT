/*
 * Copyright 2020 Shreyas Patil
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion ProjectConfig.compileSdkVersion
    buildToolsVersion ProjectConfig.buildToolsVersion

    defaultConfig {
        applicationId "dev.shreyaspatil.noty"
        minSdkVersion ProjectConfig.minSdkVersion
        targetSdkVersion ProjectConfig.targetSdkVersion
        versionCode ProjectConfig.versionCode
        versionName ProjectConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding {
            enabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    // Core Module
    implementation project(":core")

    // ViewModel Module
    implementation project(":viewmodel")

    // Coroutines (Android)
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Android
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"

    // Jetpack DataStore
    implementation "androidx.datastore:datastore-preferences:$dataStoreVersion"

    // JetPack Security
    implementation "androidx.security:security-crypto:$securityCryptoVersion"

    // Dagger + Hilt
    implementation "com.google.dagger:hilt-android:$daggerHiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$daggerHiltVersion"

    // Assisted Inject
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$assistedInjectVersion"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$assistedInjectVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"

    // Material Design
    implementation "com.google.android.material:material:$materialDesignVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // Testing
    testImplementation "junit:junit:$jUnitVersion"

    // Android Testing
    androidTestImplementation "androidx.test.ext:junit:$androidJUnitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
}
